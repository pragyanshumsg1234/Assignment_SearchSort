Q1. Write a program to sort an array in descending order using bubble sort.
Input Array {3,5,1,6,0}
Output Array: {6, 5, 3, 1, 0}


public class BubbleSortDescending {
    public static void main(String[] args) {
        // Input array
        int[] array = {3, 5, 1, 6, 0};


        // Perform Bubble Sort in descending order
        bubbleSortDescending(array);


        // Print the sorted array
        System.out.print("Output Array: {");
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i]);
            if (i < array.length - 1) {
                System.out.print(", ");
            }
        }
        System.out.println("}");
    }


    // Method to perform Bubble Sort in descending order
    public static void bubbleSortDescending(int[] array) {
        int n = array.length;
        for (int i = 0; i < n - 1; i++) {
            // Track if any swaps are made
            boolean swapped = false;


            // Perform a pass through the array
            for (int j = 0; j < n - i - 1; j++) {
                // Compare adja


Q2. WAP to sort an array in descending order using selection sort
Input Array {3,5,1,6,0}
Output Array: {6, 5, 3, 1, 0}


public class SelectionSortDescending {
    public static void main(String[] args) {
        // Input array
        int[] array = {3, 5, 1, 6, 0};


        // Perform Selection Sort in descending order
        selectionSortDescending(array);


        // Print the sorted array
        System.out.print("Output Array: {");
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i]);
            if (i < array.length - 1) {
                System.out.print(", ");
            }
        }
        System.out.println("}");
    }


    // Method to perform Selection Sort in descending order
    public static void selectionSortDescending(int[] array) {
        int n = array.length;
        for (int i = 0; i < n - 1; i++) {
            // Assume the maximum is the first element
            int maxIndex = i;


            // Find the maximum element in the remaining unsorted part
            for (int j = i + 1; j < n; j++) {
                if (array[j] > array[maxIndex]) {
                    maxIndex = j;
                }
            }


            // Swap the found maximum element with the first unsorted element
            if (maxIndex != i) {
                int temp = array[i];
                array[i] = array[maxIndex];
                array[maxIndex] = temp;
            }
        }
    }
}


Q3. WAP to sort an array in decreasing order using insertion sort
Input Array {3,5,1,6,0}
Output Array: {6, 5, 3, 1, 0}


public class InsertionSortDescending {
    public static void main(String[] args) {
        // Input array
        int[] array = {3, 5, 1, 6, 0};


        // Perform Insertion Sort in descending order
        insertionSortDescending(array);


        // Print the sorted array
        System.out.print("Output Array: {");
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i]);
            if (i < array.length - 1) {
                System.out.print(", ");
            }
        }
        System.out.println("}");
    }


    // Method to perform Insertion Sort in descending order
    public static void insertionSortDescending(int[] array) {
        int n = array.length;
        for (int i = 1; i < n; i++) {
            int key = array[i];
            int j = i - 1;


            // Move elements of array[0..i-1] that are less than key to one position ahead of their current position
            while (j >= 0 && array[j] < key) {
                array[j + 1] = array[j];
                j--;
            }
            array[j + 1] = key;
        }
    }
}


Q4. Find out how many pass would be required to sort the following array in decreasing order
using bubble sort
Input Array {3,5,1,6,0}


Ans. 3 iterations are required


Original Array is {3 5 1 6 0}
In first iteration array is {5 3 6 1 0}
In second iteration array is {5 6 3 1 0}
In third iteration array is {6 5 3 1 0}
Q5. Find out the number of iterations to sort the array in descending order using selection sort.
Input Array {3,5,1,6,0}


Ans. 3 iterations are required.


Original Array is {3 5 1 6 0}
In first iteration array is {6 5 1 3 0}
In second iteration array is {6 5 1 3 0}
In third iteration array is {6 5 3 1 0}
Now the array is sorted.